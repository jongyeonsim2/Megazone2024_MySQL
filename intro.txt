
- 이론 시험
  1. BDIA
     1회만 실시
     유형 : 구글폼, 객관식, 10문제
     평가일 : 7/16(예상일)
  
  2. MegazoneCloud
     1회를 실시( 1차, 2차 )
     유형 : 구글폼, 객관식, 25문항
     평가일 : 1차( 8/12 예상 ), 2차( 10/17 예상 )
     점수 반영 : 점수를 학점처럼 생각해야 함.
               pass(60점)
     		   59점부터는 재평가 최대 2번.
     		   재평가 점수가 반영되는 게 아님. 1회점수가 반영됨.
     시험 범위 : 항상 배운데 까지임. 수업내용, 교재, 실습 모두 반영됨.

- MySQL 환경 설정
  Eclipse + DBeaver( Client ) + MySQL Server

  VS Code, Intellij, WrokBench

  Visual Studio 2019 x64

- Learning SQL 러닝 SQL, 한빛미디어

show databases;

use sakila;

show tables; => 23 rows



1. 데이터베이스 프로젝트
   1.1 진행과정
   	    계획 -> 분석 -> 설계 -> 테스트 -> 유지보수
   1.2 DB 프로젝트 진행과정
   		- 업무 분석
   		- 개념 데이터베이스 모델링
   		   E-R Model ( 개체(Entity) - 관계(Relationship) 모델 )
   		   
   		   개체(Entity) : 업무 수행을 위해 데이터로 관리되어져야 하는
   		   사람, 사룸, 장소, 사건 등
   		   
   		   관계(Relationship) : 개체간의 관계, 1:1, 1:다, 다:다
   		   
   		   정규화 : 데이터 중복을 제거. 속성이 본래의 개체이 위치시키도록 함.
   		           일반적으로 3정규화 까지 진행.
   		           
   		- 논리적 데이터베이스 모델링
   			개념적 구조를 특정 RDBMS(MySQL) 가 처리 할 수 있는 
   			스키마를 생성하는 단계.
   			
   			개체를 대상으로 Table 변환.
   			
   			스키마 : 회사의 업무단위 별로 구분된 데이터베이스.
   			        
   			       예) 공장 관련 시스템 => 미라콤(삼성 계열사, 스마트 팩토리 전문 기업)
   			       
   			       클라우드 화. 기존 시스템 => SaaS 로.
   			        + IoT( 디지털 전환 ) + 빅데이터 + AI
   			       {
   					생산관리부서 : MES(제조실행시스템)
   					품질관리부서 : OQC(출하품질제어시스템)
   					창고관리부서 : WMS(창고관리시스템)
   					경영관리부서 : ERP(전사자원관리시스템)
   					연구소      : KMS(지식관리시스템)
   					            BOM(설계관리시스템)
   					            특허관리시스템
   					            ...
   					해외법인(...)
   					}
   					
   					메가존 클라우드 : 제조 관련 부서, SAP 팀, 제조 IoT 팀.
   					   
   					
   					기존에 위의 시스템 및 데이터베이스가 자기들 독자 서버에 있었음.
   					이 모든걸 클라우드로 전환하는 중.
   					
   					현재 한국의 스마트팩토리 관련 클라우드 전환율 20 ~ 30%.
   					(정확하지 않음. 시장조사 필요함.)
   					
   					
   		
   		- 물리적 데이터베이스 모델링
   			논리적 데이터베이스 모델링 단계에서 얻어지 데이터베이스 스키마를
   			좀 더 효율적으로 구현하기 위한 작업과 구현하려는 DBMS 의 특성에
   			맞게 실제 데이터베이스 내의 개체들을 정의하는 단계.

			더 효율적으로 구현에 대한 예.
			
		    - 데이터가 많이 적재 => SQL 속도 저하 => 속도 개선
		      속도개선(검색 효율)을 위해서 Index를 table 에 구축.
		    
		    - 코드의 복잡도, 가독성, 유지보수, 접근제어(보안) 관련 개선.
		      view, trigger, srored procedure, function. 등

		    - 역정규화
		      시스템의 성능 향상을 위해서 정규화에 위배되도록 하는 행위.
		      
		    - 지나가는 이야기
		      엔코아 컨설팅.( 도메인 지식 + RDBMS 지식 + 기술사 + 경력 ) 
		      
		    
2. 쿼리 입문
   2.0 세션(session), 트랜잭션(transaction)
       - 세션(session)
         MySQL 을 사용하기 위해 로그인 한 상태 => 세션이 시작(OPEN)되었다고 함.
         로그인 한 상태에서 로그 아웃을 한 상태 => 세션이 종료(CLOSE)되었다고 함.
         
       - 트랜잭션(transaction)
         
         트랜잭션이 끝나는 경우 :
            rollback, commit, session 종료(  ) 
            
            정상 : commit
            비정상 : rollback, session 종료
         
         생산실적 등록(마감처리)
         라인 반장님, 생산 부서 과장 -> 실적 등록 버튼 누름 -> 
         당일 실적 조회 -> 실적 처리 할 것을 선택 -> 마감 확인 버튼 ->
         tbl_production, tbl_oqc 수정 발생, 집계된 데이터를
         procedure 전달 -> erp 접수 확인 -> 실패 or 성공
         
         관련 테이블 : tbl_production, tbl_oqc, procedure( erp 연동 )
         
         생산실적 등록(마감처리) 트랜잭션
         {
         select 
         update tbl_production sql
         update tbl_oqc sql
         call procedure
         }
         
       - lock
         row lock(행단위)
            A : transaction 중
            B : update 중( A 의 transaction 종료될 때까지 대기 )
            DML 성능이 떨어지게 됨.
            
            발생시점 : 
         
         table lock(테이블 전체)
         
            발생시점 : 
       
   2.1 sakila schema
       영화 DVD 대여 체인점을 설계한 DB
       
   2.2 주요 테이블
       film : 출시되어 대여할 수 있는 영화 DVD
       actor : 영화에 출연한 배우
       customer : DVD 고객( 회원 )
       category : 영화 장르
       payment : DVD 대여료
       language : 영화 제작 언어
       film_actor : 출연 배
       inventory : 대여 가능 여부
       
   2.3 SQL 문장의 종류
       - DML( 데이터 조작어 )
         select, update, delete, insert
         
         가장 많이 사용하는 것은 select 임.
         가장 작성하기 어려운 것도 select 임. 집합개념을 작성하면, 가독성이 좋음.
         
       - select 절의 구문 형태
         select : 테이블의 칼럼, select 절
           from : 테이블, view, select 절
          where : 조건
          group by : 데이터를 그룹핑
          having : 그룹핑된 결과에서 추가적으로 조건 적용
          order by : 정렬
          
       
       
       














